name: Mobile App Build

on:
  push:
    branches: [main, develop]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-build.yml'
  pull_request:
    branches: [main]
    paths:
      - 'mobile/**'

jobs:
  # Build iOS app
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Install dependencies
        working-directory: ./mobile
        run: |
          npm ci
          cd ios && pod install
      
      - name: Run tests
        working-directory: ./mobile
        run: npm test
      
      - name: Build iOS app
        working-directory: ./mobile/ios
        run: |
          xcodebuild -workspace ChatLease.xcworkspace \
            -scheme ChatLease \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath build \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
      
      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: mobile/ios/build/Build/Products/Release-iphonesimulator/

  # Build Android app
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Install dependencies
        working-directory: ./mobile
        run: npm ci
      
      - name: Run tests
        working-directory: ./mobile
        run: npm test
      
      - name: Build Android app
        working-directory: ./mobile/android
        run: |
          ./gradlew assembleRelease
      
      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: mobile/android/app/build/outputs/apk/release/

  # Deploy to TestFlight (iOS)
  deploy-ios:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: build-ios
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        working-directory: ./mobile
        run: |
          npm ci
          cd ios && pod install
      
      - name: Build and upload to TestFlight
        working-directory: ./mobile/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          fastlane beta

  # Deploy to Google Play (Android)
  deploy-android:
    name: Deploy to Google Play
    runs-on: ubuntu-latest
    needs: build-android
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        working-directory: ./mobile
        run: npm ci
      
      - name: Build and upload to Google Play
        working-directory: ./mobile/android
        env:
          PLAY_STORE_UPLOAD_KEY_PASSWORD: ${{ secrets.PLAY_STORE_UPLOAD_KEY_PASSWORD }}
          PLAY_STORE_JSON_KEY: ${{ secrets.PLAY_STORE_JSON_KEY }}
        run: |
          fastlane beta